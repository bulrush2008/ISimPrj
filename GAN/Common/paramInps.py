
# parameterization inputs: [inlet temperature, inlet velocity, heat flux]
class ParametersInput(object):
#===============================================================================
  def __init__(self):
  #-----------------------------------------------------------------------------
    paramInpDict = {
      "C001":[438.15, 2.51104861390117, 458333.333333333],
      "C002":[448.15, 2.51104861390117, 458333.333333333],
      "C003":[458.15, 2.51104861390117, 458333.333333333],
      "C004":[468.15, 2.51104861390117, 458333.333333333],
      "C005":[478.15, 2.51104861390117, 458333.333333333],
      "C006":[438.15, 2.28784429266551, 458333.333333333],
      "C007":[448.15, 2.28784429266551, 458333.333333333],
      "C008":[458.15, 2.28784429266551, 458333.333333333],
      "C009":[468.15, 2.28784429266551, 458333.333333333], 
      "C010":[478.15, 2.28784429266551, 458333.333333333], 
      "C011":[438.15, 2.06463997142985, 458333.333333333], 
      "C012":[448.15, 2.06463997142985, 458333.333333333], 
      "C013":[458.15, 2.06463997142985, 458333.333333333], 
      "C014":[468.15, 2.06463997142985, 458333.333333333], 
      "C015":[478.15, 2.06463997142985, 458333.333333333], 
      "C016":[438.15, 1.84143565019419, 458333.333333333], 
      "C017":[448.15, 1.84143565019419, 458333.333333333], 
      "C018":[458.15, 1.84143565019419, 458333.333333333], 
      "C019":[468.15, 1.84143565019419, 458333.333333333], 
      "C020":[478.15, 1.84143565019419, 458333.333333333], 
      "C021":[438.15, 1.61823132895853, 458333.333333333], 
      "C022":[448.15, 1.61823132895853, 458333.333333333], 
      "C023":[458.15, 1.61823132895853, 458333.333333333], 
      "C024":[468.15, 1.61823132895853, 458333.333333333], 
      "C025":[478.15, 1.61823132895853, 458333.333333333], 
      "C026":[438.15, 2.51104861390117, 375000], 
      "C027":[448.15, 2.51104861390117, 375000], 
      "C028":[458.15, 2.51104861390117, 375000], 
      "C029":[468.15, 2.51104861390117, 375000], 
      "C030":[478.15, 2.51104861390117, 375000], 
      "C031":[438.15, 2.28784429266551, 375000], 
      "C032":[448.15, 2.28784429266551, 375000], 
      "C033":[458.15, 2.28784429266551, 375000], 
      "C034":[468.15, 2.28784429266551, 375000], 
      "C035":[478.15, 2.28784429266551, 375000], 
      "C036":[438.15, 2.06463997142985, 375000], 
      "C037":[448.15, 2.06463997142985, 375000], 
      "C038":[458.15, 2.06463997142985, 375000], 
      "C039":[468.15, 2.06463997142985, 375000], 
      "C040":[478.15, 2.06463997142985, 375000], 
      "C041":[438.15, 1.84143565019419, 375000], 
      "C042":[448.15, 1.84143565019419, 375000], 
      "C043":[458.15, 1.84143565019419, 375000], 
      "C044":[468.15, 1.84143565019419, 375000], 
      "C045":[478.15, 1.84143565019419, 375000], 
      "C046":[438.15, 1.61823132895853, 375000], 
      "C047":[448.15, 1.61823132895853, 375000], 
      "C048":[458.15, 1.61823132895853, 375000], 
      "C049":[468.15, 1.61823132895853, 375000], 
      "C050":[478.15, 1.61823132895853, 375000], 
      "C051":[438.15, 2.51104861390117, 291666.666666667], 
      "C052":[448.15, 2.51104861390117, 291666.666666667], 
      "C053":[458.15, 2.51104861390117, 291666.666666667], 
      "C054":[468.15, 2.51104861390117, 291666.666666667], 
      "C055":[478.15, 2.51104861390117, 291666.666666667], 
      "C056":[438.15, 2.28784429266551, 291666.666666667], 
      "C057":[448.15, 2.28784429266551, 291666.666666667], 
      "C058":[458.15, 2.28784429266551, 291666.666666667], 
      "C059":[468.15, 2.28784429266551, 291666.666666667], 
      "C060":[478.15, 2.28784429266551, 291666.666666667], 
      "C061":[438.15, 2.06463997142985, 291666.666666667], 
      "C062":[448.15, 2.06463997142985, 291666.666666667], 
      "C063":[458.15, 2.06463997142985, 291666.666666667], 
      "C064":[468.15, 2.06463997142985, 291666.666666667], 
      "C065":[478.15, 2.06463997142985, 291666.666666667], 
      "C066":[438.15, 1.84143565019419, 291666.666666667], 
      "C067":[448.15, 1.84143565019419, 291666.666666667], 
      "C068":[458.15, 1.84143565019419, 291666.666666667], 
      "C069":[468.15, 1.84143565019419, 291666.666666667], 
      "C070":[478.15, 1.84143565019419, 291666.666666667], 
      "C071":[438.15, 1.61823132895853, 291666.666666667], 
      "C072":[448.15, 1.61823132895853, 291666.666666667], 
      "C073":[458.15, 1.61823132895853, 291666.666666667], 
      "C074":[468.15, 1.61823132895853, 291666.666666667], 
      "C075":[478.15, 1.61823132895853, 291666.666666667], 
      "C076":[438.15, 2.51104861390117, 208333.333333333], 
      "C077":[448.15, 2.51104861390117, 208333.333333333], 
      "C078":[458.15, 2.51104861390117, 208333.333333333], 
      "C079":[468.15, 2.51104861390117, 208333.333333333], 
      "C080":[478.15, 2.51104861390117, 208333.333333333], 
      "C081":[438.15, 2.28784429266551, 208333.333333333], 
      "C082":[448.15, 2.28784429266551, 208333.333333333], 
      "C083":[458.15, 2.28784429266551, 208333.333333333], 
      "C084":[468.15, 2.28784429266551, 208333.333333333], 
      "C085":[478.15, 2.28784429266551, 208333.333333333], 
      "C086":[438.15, 2.06463997142985, 208333.333333333], 
      "C087":[448.15, 2.06463997142985, 208333.333333333], 
      "C088":[458.15, 2.06463997142985, 208333.333333333], 
      "C089":[468.15, 2.06463997142985, 208333.333333333], 
      "C090":[478.15, 2.06463997142985, 208333.333333333], 
      "C091":[438.15, 1.84143565019419, 208333.333333333], 
      "C092":[448.15, 1.84143565019419, 208333.333333333], 
      "C093":[458.15, 1.84143565019419, 208333.333333333], 
      "C094":[468.15, 1.84143565019419, 208333.333333333], 
      "C095":[478.15, 1.84143565019419, 208333.333333333], 
      "C096":[438.15, 1.61823132895853, 208333.333333333], 
      "C097":[448.15, 1.61823132895853, 208333.333333333], 
      "C098":[458.15, 1.61823132895853, 208333.333333333], 
      "C099":[468.15, 1.61823132895853, 208333.333333333], 
      "C100":[478.15, 1.61823132895853, 208333.333333333], 
      "C101":[438.15, 2.51104861390117, 125000], 
      "C102":[448.15, 2.51104861390117, 125000], 
      "C103":[458.15, 2.51104861390117, 125000], 
      "C104":[468.15, 2.51104861390117, 125000], 
      "C105":[478.15, 2.51104861390117, 125000], 
      "C106":[438.15, 2.28784429266551, 125000], 
      "C107":[448.15, 2.28784429266551, 125000], 
      "C108":[458.15, 2.28784429266551, 125000], 
      "C109":[468.15, 2.28784429266551, 125000], 
      "C110":[478.15, 2.28784429266551, 125000], 
      "C111":[438.15, 2.06463997142985, 125000], 
      "C112":[448.15, 2.06463997142985, 125000], 
      "C113":[458.15, 2.06463997142985, 125000], 
      "C114":[468.15, 2.06463997142985, 125000], 
      "C115":[478.15, 2.06463997142985, 125000], 
      "C116":[438.15, 1.84143565019419, 125000], 
      "C117":[448.15, 1.84143565019419, 125000], 
      "C118":[458.15, 1.84143565019419, 125000], 
      "C119":[468.15, 1.84143565019419, 125000], 
      "C120":[478.15, 1.84143565019419, 125000], 
      "C121":[438.15, 1.61823132895853, 125000], 
      "C122":[448.15, 1.61823132895853, 125000], 
      "C123":[458.15, 1.61823132895853, 125000], 
      "C124":[468.15, 1.61823132895853, 125000], 
      "C125":[478.15, 1.61823132895853, 125000]}

    lenParamInp = len(paramInpDict)

    _large =  1.0E+20
    _small = -1.0E+20

    maxs = [_small, _small, _small]
    mins = [_large, _large, _large]

    for value in paramInpDict.values():
      for i in range(len(value)):
        if value[i] > maxs[i]: maxs[i] = value[i]
        if value[i] < mins[i]: mins[i] = value[i]
        pass
      pass

    _gaps = [0.0, 0.0, 0.0]
    for i in range(len(_gaps)):
      _gaps[i] = maxs[i] - mins[i]
      pass

    # normalize the input
    for key, value in paramInpDict.items():
      for i in range(len(value)):
        paramInpDict[key][i] = (paramInpDict[key][i] - mins[i]) / _gaps[i]
        pass
      pass

    self.prmDict = paramInpDict

    trainCaseList = [
      'C103',
      'C048',
      'C092',
      'C049',
      'C029',
      'C056',
      'C023',
      'C064',
      'C086',
      'C067',
      'C114',
      'C071',
      'C027',
      'C109',
      'C101',
      'C075',
      'C014',
      'C063',
      'C041',
      'C021',
      'C033',
      'C062',
      'C052',
      'C082',
      'C018',
      'C024',
      'C054',
      'C117',
      'C059',
      'C060',
      'C042',
      'C051',
      'C068',
      'C066',
      'C122',
      'C080',
      'C089',
      'C124',
      'C098',
      'C044',
      'C036',
      'C028',
      'C001',
      'C094',
      'C072',
      'C079',
      'C121',
      'C046',
      'C017',
      'C102',
      'C110',
      'C038',
      'C074',
      'C004',
      'C096',
      'C095',
      'C043',
      'C005',
      'C037',
      'C020',
      'C031',
      'C016',
      'C097',
      'C108',
      'C019',
      'C090',
      'C006',
      'C078',
      'C100',
      'C069',
      'C088',
      'C065',
      'C008',
      'C091',
      'C084',
      'C034',
      'C025',
      'C107',
      'C032',
      'C058',
      'C125',
      'C120',
      'C123',
      'C030',
      'C013',
      'C111',
      'C113',
      'C057',
      'C106',
      'C099',
      'C105',
      'C085',
      'C035',
      'C053',
      'C007',
      'C061',
      'C104',
      'C115',
      'C119',
      'C083']

    self.trnCaseList = trainCaseList
    pass  # end '__init__'
  pass

if __name__=="__main__":
  import random
  random.seed(32)

  pinp = ParametersInput()

  len_train_case_list = len(pinp.trnCaseList)

  for i in range(10):
    rand_idx = random.randint(0,len_train_case_list-1)
    key = pinp.trnCaseList[rand_idx]

    print(pinp.prmDict[key])
    pass
  pass